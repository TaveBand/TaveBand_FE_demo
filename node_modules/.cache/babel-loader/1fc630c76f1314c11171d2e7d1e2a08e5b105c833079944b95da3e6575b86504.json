{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82108\\\\Desktop\\\\taveband\\\\taveband\\\\src\\\\routes\\\\Scrap.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Header from '../components/Header';\r\nimport './Scrap.css';\r\n\r\nfunction Scrap() {\r\n  const { user_id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [scraps, setScraps] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchScraps = async () => {\r\n      try {\r\n        const response = await axios.get(`/dailband/user/${user_id}/scraps`);\r\n        setScraps(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch scraps:', error);\r\n      }\r\n    };\r\n\r\n    fetchScraps();\r\n  }, [user_id]);\r\n\r\n  return (\r\n    <div className=\"Scrap\">\r\n      <Header />\r\n      <div className=\"Scrap-container\">\r\n        <div className=\"Sidebar\">\r\n          <div className=\"Profile-picture\">\r\n            <img src=\"/path/to/default-profile.png\" alt=\"프로필 사진\" />\r\n          </div>\r\n          <h2>윤영선</h2>\r\n          <Link to={`/profile/edit/${user_id}`}>프로필 수정</Link>\r\n          <Link to={`/scrap/${user_id}`} className=\"active\">스크랩</Link>\r\n          <Link to={`/myposts/${user_id}`}>내가 쓴 글</Link>\r\n          <Link to={`/reservations/${user_id}`}>공연 예약</Link>\r\n        </div>\r\n        <div className=\"Content\">\r\n          <h2>스크랩</h2>\r\n          <div className=\"Scrap-list\">\r\n            {scraps.map((scrap) => (\r\n              <div key={scrap.id} className=\"Scrap-item\">\r\n                <img src={scrap.image} alt={scrap.title} />\r\n                <div className=\"Scrap-info\">\r\n                  <h3>{scrap.title}</h3>\r\n                  <p>{scrap.description}</p>\r\n                  <button onClick={() => console.log('삭제 기능 구현 필요')}>삭제</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scrap;\r\n\r\n*/\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Header from '../components/Header';\nimport './Scrap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Scrap() {\n  _s();\n  const {\n    user_id\n  } = useParams();\n  const [scraps, setScraps] = useState([]);\n  useEffect(() => {\n    const fetchScraps = async () => {\n      try {\n        const response = await axios.get('/scraps.json');\n        setScraps(response.data);\n      } catch (error) {\n        console.error('Failed to fetch scraps:', error);\n      }\n    };\n    fetchScraps();\n  }, [user_id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Scrap\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Scrap-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Profile-picture\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/path/to/default-profile.png\",\n            alt: \"\\uD504\\uB85C\\uD544 \\uC0AC\\uC9C4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uC724\\uC601\\uC120\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/edit/${user_id}`,\n          children: \"\\uD504\\uB85C\\uD544 \\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/scrap/${user_id}`,\n          className: \"active\",\n          children: \"\\uC2A4\\uD06C\\uB7A9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/myposts/${user_id}`,\n          children: \"\\uB0B4\\uAC00 \\uC4F4 \\uAE00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/reservations/${user_id}`,\n          children: \"\\uACF5\\uC5F0 \\uC608\\uC57D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uC2A4\\uD06C\\uB7A9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Scrap-list\",\n          children: scraps.map(scrap => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Scrap-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: scrap.image,\n              alt: scrap.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Scrap-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: scrap.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: scrap.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => console.log('삭제 기능 구현 필요'),\n                children: \"\\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, scrap.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(Scrap, \"c7bzSN/CFQDublQVkf+MhJUvLIE=\", false, function () {\n  return [useParams];\n});\n_c = Scrap;\nexport default Scrap;\nvar _c;\n$RefreshReg$(_c, \"Scrap\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","axios","Header","jsxDEV","_jsxDEV","Scrap","_s","user_id","scraps","setScraps","fetchScraps","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","to","map","scrap","image","title","description","onClick","log","id","_c","$RefreshReg$"],"sources":["C:/Users/82108/Desktop/taveband/taveband/src/routes/Scrap.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Header from '../components/Header';\r\nimport './Scrap.css';\r\n\r\nfunction Scrap() {\r\n  const { user_id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [scraps, setScraps] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchScraps = async () => {\r\n      try {\r\n        const response = await axios.get(`/dailband/user/${user_id}/scraps`);\r\n        setScraps(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch scraps:', error);\r\n      }\r\n    };\r\n\r\n    fetchScraps();\r\n  }, [user_id]);\r\n\r\n  return (\r\n    <div className=\"Scrap\">\r\n      <Header />\r\n      <div className=\"Scrap-container\">\r\n        <div className=\"Sidebar\">\r\n          <div className=\"Profile-picture\">\r\n            <img src=\"/path/to/default-profile.png\" alt=\"프로필 사진\" />\r\n          </div>\r\n          <h2>윤영선</h2>\r\n          <Link to={`/profile/edit/${user_id}`}>프로필 수정</Link>\r\n          <Link to={`/scrap/${user_id}`} className=\"active\">스크랩</Link>\r\n          <Link to={`/myposts/${user_id}`}>내가 쓴 글</Link>\r\n          <Link to={`/reservations/${user_id}`}>공연 예약</Link>\r\n        </div>\r\n        <div className=\"Content\">\r\n          <h2>스크랩</h2>\r\n          <div className=\"Scrap-list\">\r\n            {scraps.map((scrap) => (\r\n              <div key={scrap.id} className=\"Scrap-item\">\r\n                <img src={scrap.image} alt={scrap.title} />\r\n                <div className=\"Scrap-info\">\r\n                  <h3>{scrap.title}</h3>\r\n                  <p>{scrap.description}</p>\r\n                  <button onClick={() => console.log('삭제 기능 구현 필요')}>삭제</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scrap;\r\n\r\n*/\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Header from '../components/Header';\r\nimport './Scrap.css';\r\n\r\nfunction Scrap() {\r\n  const { user_id } = useParams();\r\n  const [scraps, setScraps] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchScraps = async () => {\r\n      try {\r\n        const response = await axios.get('/scraps.json');\r\n        setScraps(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch scraps:', error);\r\n      }\r\n    };\r\n\r\n    fetchScraps();\r\n  }, [user_id]);\r\n\r\n  return (\r\n    <div className=\"Scrap\">\r\n      <Header />\r\n      <div className=\"Scrap-container\">\r\n        <div className=\"Sidebar\">\r\n          <div className=\"Profile-picture\">\r\n            <img src=\"/path/to/default-profile.png\" alt=\"프로필 사진\" />\r\n          </div>\r\n          <h2>윤영선</h2>\r\n          <Link to={`/profile/edit/${user_id}`}>프로필 수정</Link>\r\n          <Link to={`/scrap/${user_id}`} className=\"active\">스크랩</Link>\r\n          <Link to={`/myposts/${user_id}`}>내가 쓴 글</Link>\r\n          <Link to={`/reservations/${user_id}`}>공연 예약</Link>\r\n        </div>\r\n        <div className=\"Content\">\r\n          <h2>스크랩</h2>\r\n          <div className=\"Scrap-list\">\r\n            {scraps.map((scrap) => (\r\n              <div key={scrap.id} className=\"Scrap-item\">\r\n                <img src={scrap.image} alt={scrap.title} />\r\n                <div className=\"Scrap-info\">\r\n                  <h3>{scrap.title}</h3>\r\n                  <p>{scrap.description}</p>\r\n                  <button onClick={() => console.log('삭제 기능 구현 필요')}>삭제</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scrap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}