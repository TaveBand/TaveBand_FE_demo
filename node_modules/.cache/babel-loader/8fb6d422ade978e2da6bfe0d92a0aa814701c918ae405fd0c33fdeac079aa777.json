{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82108\\\\Desktop\\\\taveband\\\\taveband\\\\src\\\\routes\\\\ProfileEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Header from '../components/Header';\nimport './ProfileEdit.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfileEdit() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user_id\n  } = useParams();\n  const [profile, setProfile] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    username: '',\n    email: '',\n    roles: [],\n    // Updated to store an array of roles\n    description: ''\n  });\n  const roles = ['드럼', '기타', '베이스', '보컬', '키보드']; // List of roles\n\n  useEffect(() => {\n    // Fetch user profile from the API\n    fetch(`/dailband/user/${user_id}/profile`).then(response => response.json()).then(data => {\n      setProfile(data);\n      setFormData({\n        name: data.name,\n        username: data.username,\n        email: data.email,\n        roles: data.roles || [],\n        // Assuming the API returns an array of roles\n        description: data.description\n      });\n    }).catch(error => console.error('Error fetching profile:', error));\n  }, [user_id]);\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  }\n  function handleRoleChange(e) {\n    const {\n      value,\n      checked\n    } = e.target;\n    setFormData(prevState => {\n      const newRoles = checked ? [...prevState.roles, value] : prevState.roles.filter(role => role !== value);\n      return {\n        ...prevState,\n        roles: newRoles\n      };\n    });\n  }\n  function handleUpdateProfile() {\n    // Update user profile via the API\n    fetch(`/dailband/user/${user_id}/profile`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => {\n      setProfile(data);\n      alert('Profile updated successfully!');\n      // Navigate to the profile detail page after successful update\n      navigate(`/profile/${user_id}`);\n    }).catch(error => console.error('Error updating profile:', error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ProfileEditPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TitleEdit\",\n        children: \"\\uD504\\uB85C\\uD544 \\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InputEdit\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\uC774\\uB984\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\uC720\\uC800\\uB124\\uC784\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\uC774\\uBA54\\uC77C\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CheckboxGroup\",\n          children: roles.map(role => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: role,\n              checked: formData.roles.includes(role),\n              onChange: handleRoleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), role]\n          }, role, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"\\uC124\\uBA85\",\n          name: \"description\",\n          value: formData.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SubmitBtns\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"EditSubmit\",\n          onClick: handleUpdateProfile,\n          children: \"\\uC218\\uC815 \\uC644\\uB8CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Background\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"background\",\n        src: \"img/\\uBC30\\uACBD\\uC0AC\\uC9C4.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfileEdit, \"va9V56+MKKKi/xjZf0MCLCh9ydM=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ProfileEdit;\nexport default ProfileEdit;\nvar _c;\n$RefreshReg$(_c, \"ProfileEdit\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","Header","jsxDEV","_jsxDEV","ProfileEdit","_s","navigate","user_id","profile","setProfile","formData","setFormData","name","username","email","roles","description","fetch","then","response","json","data","catch","error","console","handleChange","e","value","target","prevState","handleRoleChange","checked","newRoles","filter","role","handleUpdateProfile","method","headers","body","JSON","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","onChange","map","type","includes","onClick","alt","src","_c","$RefreshReg$"],"sources":["C:/Users/82108/Desktop/taveband/taveband/src/routes/ProfileEdit.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport './ProfileEdit.css';\r\n\r\nfunction ProfileEdit() {\r\n  const navigate = useNavigate();\r\n  const { user_id } = useParams();\r\n  const [profile, setProfile] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    username: '',\r\n    email: '',\r\n    roles: [], // Updated to store an array of roles\r\n    description: ''\r\n  });\r\n\r\n  const roles = ['드럼', '기타', '베이스', '보컬', '키보드']; // List of roles\r\n\r\n  useEffect(() => {\r\n    // Fetch user profile from the API\r\n    fetch(`/dailband/user/${user_id}/profile`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setProfile(data);\r\n        setFormData({\r\n          name: data.name,\r\n          username: data.username,\r\n          email: data.email,\r\n          roles: data.roles || [], // Assuming the API returns an array of roles\r\n          description: data.description\r\n        });\r\n      })\r\n      .catch(error => console.error('Error fetching profile:', error));\r\n  }, [user_id]);\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  }\r\n\r\n  function handleRoleChange(e) {\r\n    const { value, checked } = e.target;\r\n    setFormData(prevState => {\r\n      const newRoles = checked\r\n        ? [...prevState.roles, value]\r\n        : prevState.roles.filter(role => role !== value);\r\n\r\n      return {\r\n        ...prevState,\r\n        roles: newRoles\r\n      };\r\n    });\r\n  }\r\n\r\n  function handleUpdateProfile() {\r\n    // Update user profile via the API\r\n    fetch(`/dailband/user/${user_id}/profile`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(formData)\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setProfile(data);\r\n        alert('Profile updated successfully!');\r\n        // Navigate to the profile detail page after successful update\r\n        navigate(`/profile/${user_id}`);\r\n      })\r\n      .catch(error => console.error('Error updating profile:', error));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"ProfileEditPage\">\r\n        <div className=\"TitleEdit\">프로필 수정</div>\r\n        <div className=\"InputEdit\">\r\n          <input\r\n            placeholder=\"이름\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            placeholder=\"유저네임\"\r\n            name=\"username\"\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            placeholder=\"이메일\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n          />\r\n          <div className=\"CheckboxGroup\">\r\n            {roles.map(role => (\r\n              <label key={role}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value={role}\r\n                  checked={formData.roles.includes(role)}\r\n                  onChange={handleRoleChange}\r\n                />\r\n                {role}\r\n              </label>\r\n            ))}\r\n          </div>\r\n          <textarea\r\n            placeholder=\"설명\"\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={handleChange}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"SubmitBtns\">\r\n          <button className=\"EditSubmit\" onClick={handleUpdateProfile}>\r\n            수정 완료\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"Background\">\r\n        <img alt=\"background\" src=\"img/배경사진.jpg\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileEdit;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}