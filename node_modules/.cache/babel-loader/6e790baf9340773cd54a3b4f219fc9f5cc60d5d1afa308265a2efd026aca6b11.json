{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82108\\\\Desktop\\\\taveband\\\\taveband\\\\src\\\\routes\\\\ProfileEdit.js\",\n  _s = $RefreshSig$();\n/*\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from \"../components/Header\";\r\nimport \"./ProfileEdit.css\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nfunction ProfileEdit() {\r\n  const { user_id } = useParams();\r\n  const [formData, setFormData] = useState({\r\n    nickname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n    sessions: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`/dailband/user/${user_id}/profile`);\r\n        setFormData(response.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [user_id]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { value, checked } = e.target;\r\n    setFormData((prevData) => {\r\n      if (checked) {\r\n        return { ...prevData, sessions: [...prevData.sessions, value] };\r\n      } else {\r\n        return {\r\n          ...prevData,\r\n          sessions: prevData.sessions.filter((session) => session !== value),\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.password !== formData.passwordConfirm) {\r\n      alert(\"비밀번호가 일치하지 않습니다.\");\r\n      return;\r\n    }\r\n    try {\r\n      await axios.put(`/dailband/user/${user_id}/profile`, formData);\r\n      alert(\"프로필이 성공적으로 업데이트되었습니다.\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"프로필 업데이트 중 오류가 발생했습니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ProfileEdit\">\r\n      <Header />\r\n      <div className=\"ProfileEdit-container\">\r\n        <div className=\"Sidebar\">\r\n          <div className=\"Profile-picture\">\r\n            <img src=\"/path/to/default-profile.png\" alt=\"프로필 사진\" />\r\n          </div>\r\n          <h2>{formData.nickname}</h2>\r\n          <Link to={`/profile/edit/${user_id}`} className=\"active\">프로필 수정</Link>\r\n          <Link to=\"/scrap\">스크랩</Link>\r\n          <Link to=\"/MyPost\">내가 쓴 글</Link>\r\n          <Link to=\"/MyReservations\">공연 예약</Link>\r\n        </div>\r\n        <div className=\"Content\">\r\n          <h2>마이페이지</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"InputField\">\r\n              <label>닉네임</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"nickname\"\r\n                value={formData.nickname}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"InputField\">\r\n              <label>이메일</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"InputField\">\r\n              <label>비밀번호 변경</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"InputField\">\r\n              <label>비밀번호 확인</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"passwordConfirm\"\r\n                value={formData.passwordConfirm}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"CheckboxGroup\">\r\n              <label>세션 정보</label>\r\n              {[\"드럼\", \"기타\", \"보컬\", \"베이스\", \"키보드\"].map((role) => (\r\n                <label key={role}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"sessions\"\r\n                    value={role}\r\n                    checked={formData.sessions.includes(role)}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                  {role}\r\n                </label>\r\n              ))}\r\n            </div>\r\n            <button type=\"submit\" className=\"UpdateButton\">\r\n              수정\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileEdit;\r\n\r\n\r\n\r\n*/\n\n/*\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport './ProfileEdit.css';\r\n\r\nfunction ProfileEdit() {\r\n  const { user_id } = useParams();\r\n  const [formData, setFormData] = useState({\r\n    nickname: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n    sessions: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`/dailband/user/${user_id}/profile`);\r\n        setFormData(response.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [user_id]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { value, checked } = e.target;\r\n    setFormData((prevData) => {\r\n      if (checked) {\r\n        return { ...prevData, sessions: [...prevData.sessions, value] };\r\n      } else {\r\n        return {\r\n          ...prevData,\r\n          sessions: prevData.sessions.filter((session) => session !== value),\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.password !== formData.passwordConfirm) {\r\n      alert('비밀번호가 일치하지 않습니다.');\r\n      return;\r\n    }\r\n    try {\r\n      await axios.put(`/dailband/user/${user_id}/profile`, formData);\r\n      alert('프로필이 성공적으로 업데이트되었습니다.');\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('프로필 업데이트 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ProfileEdit\">\r\n      <Header />\r\n      <div className=\"ProfileEdit-container\">\r\n        <div className=\"Sidebar\">\r\n          <div className=\"Profile-picture\">\r\n            <img src=\"/path/to/default-profile.png\" alt=\"프로필 사진\" />\r\n          </div>\r\n          <h2>{formData.nickname}</h2>\r\n          <Link to={`/profile/edit/${user_id}`} className=\"active\">프로필 수정</Link>\r\n          <Link to=\"/scrap\">스크랩</Link>\r\n          <Link to=\"/MyPost\">내가 쓴 글</Link>\r\n          <Link to=\"/MyReservations\">공연 예약</Link>\r\n        </div>\r\n        <div className=\"Content\">\r\n          <h2>마이페이지</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"InputField\">\r\n              <label>닉네임</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"nickname\"\r\n                value={formData.nickname}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"InputField\">\r\n              <label>이메일</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"InputField\">\r\n              <label>비밀번호 변경</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"InputField\">\r\n              <label>비밀번호 확인</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"passwordConfirm\"\r\n                value={formData.passwordConfirm}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"CheckboxGroup\">\r\n              <label>세션 정보</label>\r\n              {['드럼', '기타', '보컬', '베이스', '키보드'].map((role) => (\r\n                <label key={role}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"sessions\"\r\n                    value={role}\r\n                    checked={formData.sessions.includes(role)}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                  {role}\r\n                </label>\r\n              ))}\r\n            </div>\r\n            <button type=\"submit\" className=\"UpdateButton\">\r\n              수정\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileEdit;\r\n\r\n\r\n*/\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, useParams } from 'react-router-dom';\nimport Header from '../components/Header';\nimport './ProfileEdit.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfileEdit() {\n  _s();\n  const {\n    user_id\n  } = useParams();\n  const [formData, setFormData] = useState({\n    nickname: '',\n    email: '',\n    password: '',\n    passwordConfirm: '',\n    sessions: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`/dailband/user/${user_id}/profile`);\n        setFormData(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, [user_id]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleCheckboxChange = e => {\n    const {\n      value,\n      checked\n    } = e.target;\n    setFormData(prevData => {\n      if (checked) {\n        return {\n          ...prevData,\n          sessions: [...prevData.sessions, value]\n        };\n      } else {\n        return {\n          ...prevData,\n          sessions: prevData.sessions.filter(session => session !== value)\n        };\n      }\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.password !== formData.passwordConfirm) {\n      alert('비밀번호가 일치하지 않습니다.');\n      return;\n    }\n    try {\n      await axios.put(`/dailband/user/${user_id}/profile`, formData);\n      alert('프로필이 성공적으로 업데이트되었습니다.');\n    } catch (error) {\n      console.error(error);\n      alert('프로필 업데이트 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ProfileEdit\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ProfileEdit-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Profile-picture\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/path/to/default-profile.png\",\n            alt: \"\\uD504\\uB85C\\uD544 \\uC0AC\\uC9C4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: formData.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/edit/${user_id}`,\n          className: \"active\",\n          children: \"\\uD504\\uB85C\\uD544 \\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/scrap\",\n          children: \"\\uC2A4\\uD06C\\uB7A9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/MyPost\",\n          children: \"\\uB0B4\\uAC00 \\uC4F4 \\uAE00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/MyPerformances\",\n          children: \"\\uB0B4\\uAC00 \\uC791\\uC131\\uD55C \\uACF5\\uC5F0 \\uC870\\uD68C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/reservations\",\n          children: \"\\uACF5\\uC5F0 \\uC608\\uC57D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"InputField\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uB2C9\\uB124\\uC784\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"nickname\",\n              value: formData.nickname,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"InputField\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uC774\\uBA54\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"InputField\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"InputField\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"passwordConfirm\",\n              value: formData.passwordConfirm,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"CheckboxGroup\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uC138\\uC158 \\uC815\\uBCF4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), ['드럼', '기타', '보컬', '베이스', '키보드'].map(role => /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"sessions\",\n                value: role,\n                checked: formData.sessions.includes(role),\n                onChange: handleCheckboxChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this), role]\n            }, role, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"UpdateButton\",\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfileEdit, \"f2RVN87NDMUkfEo6drK7l8JlFzE=\", false, function () {\n  return [useParams];\n});\n_c = ProfileEdit;\nexport default ProfileEdit;\nvar _c;\n$RefreshReg$(_c, \"ProfileEdit\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","useParams","Header","jsxDEV","_jsxDEV","ProfileEdit","_s","user_id","formData","setFormData","nickname","email","password","passwordConfirm","sessions","fetchData","response","get","data","error","console","handleChange","e","name","value","target","handleCheckboxChange","checked","prevData","filter","session","handleSubmit","preventDefault","alert","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","to","onSubmit","type","onChange","map","role","includes","_c","$RefreshReg$"],"sources":["C:/Users/82108/Desktop/taveband/taveband/src/routes/ProfileEdit.js"],"sourcesContent":["/*\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from \"../components/Header\";\r\nimport \"./ProfileEdit.css\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nfunction ProfileEdit() {\r\n  const { user_id } = useParams();\r\n  const [formData, setFormData] = useState({\r\n    nickname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n    sessions: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`/dailband/user/${user_id}/profile`);\r\n        setFormData(response.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [user_id]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { value, checked } = e.target;\r\n    setFormData((prevData) => {\r\n      if (checked) {\r\n        return { ...prevData, sessions: [...prevData.sessions, value] };\r\n      } else {\r\n        return {\r\n          ...prevData,\r\n          sessions: prevData.sessions.filter((session) => session !== value),\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.password !== formData.passwordConfirm) {\r\n      alert(\"비밀번호가 일치하지 않습니다.\");\r\n      return;\r\n    }\r\n    try {\r\n      await axios.put(`/dailband/user/${user_id}/profile`, formData);\r\n      alert(\"프로필이 성공적으로 업데이트되었습니다.\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"프로필 업데이트 중 오류가 발생했습니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ProfileEdit\">\r\n      <Header />\r\n      <div className=\"ProfileEdit-container\">\r\n        <div className=\"Sidebar\">\r\n          <div className=\"Profile-picture\">\r\n            <img src=\"/path/to/default-profile.png\" alt=\"프로필 사진\" />\r\n          </div>\r\n          <h2>{formData.nickname}</h2>\r\n          <Link to={`/profile/edit/${user_id}`} className=\"active\">프로필 수정</Link>\r\n          <Link to=\"/scrap\">스크랩</Link>\r\n          <Link to=\"/MyPost\">내가 쓴 글</Link>\r\n          <Link to=\"/MyReservations\">공연 예약</Link>\r\n        </div>\r\n        <div className=\"Content\">\r\n          <h2>마이페이지</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"InputField\">\r\n              <label>닉네임</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"nickname\"\r\n                value={formData.nickname}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"InputField\">\r\n              <label>이메일</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"InputField\">\r\n              <label>비밀번호 변경</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"InputField\">\r\n              <label>비밀번호 확인</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"passwordConfirm\"\r\n                value={formData.passwordConfirm}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"CheckboxGroup\">\r\n              <label>세션 정보</label>\r\n              {[\"드럼\", \"기타\", \"보컬\", \"베이스\", \"키보드\"].map((role) => (\r\n                <label key={role}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"sessions\"\r\n                    value={role}\r\n                    checked={formData.sessions.includes(role)}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                  {role}\r\n                </label>\r\n              ))}\r\n            </div>\r\n            <button type=\"submit\" className=\"UpdateButton\">\r\n              수정\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileEdit;\r\n\r\n\r\n\r\n*/\r\n\r\n/*\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport './ProfileEdit.css';\r\n\r\nfunction ProfileEdit() {\r\n  const { user_id } = useParams();\r\n  const [formData, setFormData] = useState({\r\n    nickname: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n    sessions: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`/dailband/user/${user_id}/profile`);\r\n        setFormData(response.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [user_id]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { value, checked } = e.target;\r\n    setFormData((prevData) => {\r\n      if (checked) {\r\n        return { ...prevData, sessions: [...prevData.sessions, value] };\r\n      } else {\r\n        return {\r\n          ...prevData,\r\n          sessions: prevData.sessions.filter((session) => session !== value),\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.password !== formData.passwordConfirm) {\r\n      alert('비밀번호가 일치하지 않습니다.');\r\n      return;\r\n    }\r\n    try {\r\n      await axios.put(`/dailband/user/${user_id}/profile`, formData);\r\n      alert('프로필이 성공적으로 업데이트되었습니다.');\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('프로필 업데이트 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ProfileEdit\">\r\n      <Header />\r\n      <div className=\"ProfileEdit-container\">\r\n        <div className=\"Sidebar\">\r\n          <div className=\"Profile-picture\">\r\n            <img src=\"/path/to/default-profile.png\" alt=\"프로필 사진\" />\r\n          </div>\r\n          <h2>{formData.nickname}</h2>\r\n          <Link to={`/profile/edit/${user_id}`} className=\"active\">프로필 수정</Link>\r\n          <Link to=\"/scrap\">스크랩</Link>\r\n          <Link to=\"/MyPost\">내가 쓴 글</Link>\r\n          <Link to=\"/MyReservations\">공연 예약</Link>\r\n        </div>\r\n        <div className=\"Content\">\r\n          <h2>마이페이지</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"InputField\">\r\n              <label>닉네임</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"nickname\"\r\n                value={formData.nickname}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"InputField\">\r\n              <label>이메일</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"InputField\">\r\n              <label>비밀번호 변경</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"InputField\">\r\n              <label>비밀번호 확인</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"passwordConfirm\"\r\n                value={formData.passwordConfirm}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"CheckboxGroup\">\r\n              <label>세션 정보</label>\r\n              {['드럼', '기타', '보컬', '베이스', '키보드'].map((role) => (\r\n                <label key={role}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"sessions\"\r\n                    value={role}\r\n                    checked={formData.sessions.includes(role)}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                  {role}\r\n                </label>\r\n              ))}\r\n            </div>\r\n            <button type=\"submit\" className=\"UpdateButton\">\r\n              수정\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileEdit;\r\n\r\n\r\n*/\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport './ProfileEdit.css';\r\n\r\nfunction ProfileEdit() {\r\n  const { user_id } = useParams();\r\n  const [formData, setFormData] = useState({\r\n    nickname: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n    sessions: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`/dailband/user/${user_id}/profile`);\r\n        setFormData(response.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [user_id]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { value, checked } = e.target;\r\n    setFormData((prevData) => {\r\n      if (checked) {\r\n        return { ...prevData, sessions: [...prevData.sessions, value] };\r\n      } else {\r\n        return {\r\n          ...prevData,\r\n          sessions: prevData.sessions.filter((session) => session !== value),\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.password !== formData.passwordConfirm) {\r\n      alert('비밀번호가 일치하지 않습니다.');\r\n      return;\r\n    }\r\n    try {\r\n      await axios.put(`/dailband/user/${user_id}/profile`, formData);\r\n      alert('프로필이 성공적으로 업데이트되었습니다.');\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('프로필 업데이트 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ProfileEdit\">\r\n      <Header />\r\n      <div className=\"ProfileEdit-container\">\r\n        <div className=\"Sidebar\">\r\n          <div className=\"Profile-picture\">\r\n            <img src=\"/path/to/default-profile.png\" alt=\"프로필 사진\" />\r\n          </div>\r\n          <h2>{formData.nickname}</h2>\r\n          <Link to={`/profile/edit/${user_id}`} className=\"active\">프로필 수정</Link>\r\n          <Link to=\"/scrap\">스크랩</Link>\r\n          <Link to=\"/MyPost\">내가 쓴 글</Link>\r\n          <Link to=\"/MyPerformances\">내가 작성한 공연 조회</Link>\r\n          <Link to=\"/reservations\">공연 예약</Link>\r\n        </div>\r\n        <div className=\"Content\">\r\n          <h2>마이페이지</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"InputField\">\r\n              <label>닉네임</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"nickname\"\r\n                value={formData.nickname}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"InputField\">\r\n              <label>이메일</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"InputField\">\r\n              <label>비밀번호 변경</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"InputField\">\r\n              <label>비밀번호 확인</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"passwordConfirm\"\r\n                value={formData.passwordConfirm}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"CheckboxGroup\">\r\n              <label>세션 정보</label>\r\n              {['드럼', '기타', '보컬', '베이스', '키보드'].map((role) => (\r\n                <label key={role}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"sessions\"\r\n                    value={role}\r\n                    checked={formData.sessions.includes(role)}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                  {role}\r\n                </label>\r\n              ))}\r\n            </div>\r\n            <button type=\"submit\" className=\"UpdateButton\">\r\n              수정\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileEdit;\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}