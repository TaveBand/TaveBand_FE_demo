{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82108\\\\Desktop\\\\taveband\\\\taveband\\\\src\\\\routes\\\\Scrap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"../components/Header\";\nimport { useParams, Link } from \"react-router-dom\";\nimport \"./Scrap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Scrap() {\n  _s();\n  const {\n    user_id\n  } = useParams();\n  const [scraps, setScraps] = useState([]);\n  useEffect(() => {\n    const fetchScraps = async () => {\n      try {\n        const response = await axios.get(`/dailband/user/${user_id}/scraps`);\n        setScraps(response.data);\n      } catch (error) {\n        console.error(\"Failed to fetch scraps:\", error);\n      }\n    };\n    fetchScraps();\n  }, [user_id]);\n  const handleDelete = postId => {\n    axios.delete(`/dailband/user/${user_id}/scraps/${postId}`).then(() => {\n      setScraps(scraps.filter(scrap => scrap.post_id !== postId));\n    }).catch(error => {\n      console.error('There was an error deleting the scrap!', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ScrapsPage\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC724\\uC601\\uC120\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/profile/edit/${user_id}`,\n        children: \"\\uD504\\uB85C\\uD544 \\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/dailband/user/${user_id}/scrap`,\n        children: \"\\uC2A4\\uD06C\\uB7A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/dailband/user/${user_id}/posts`,\n        children: \"\\uB0B4\\uAC00 \\uC4F4 \\uAE00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/dailband/user/myreservations`,\n        children: \"\\uACF5\\uC5F0 \\uC608\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC2A4\\uD06C\\uB7A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ScrapsList\",\n        children: scraps.map(scrap => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ScrapItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: scrap.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: scrap.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\uC791\\uC131\\uC790:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 18\n            }, this), \" \", scrap.nickname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC791\\uC131 \\uB0A0\\uC9DC: \", new Date(scrap.created_at).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(scrap.post_id),\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, scrap.post_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Scrap, \"c7bzSN/CFQDublQVkf+MhJUvLIE=\", false, function () {\n  return [useParams];\n});\n_c = Scrap;\nexport default Scrap;\nvar _c;\n$RefreshReg$(_c, \"Scrap\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","useParams","Link","jsxDEV","_jsxDEV","Scrap","_s","user_id","scraps","setScraps","fetchScraps","response","get","data","error","console","handleDelete","postId","delete","then","filter","scrap","post_id","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","map","title","content","nickname","Date","created_at","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["C:/Users/82108/Desktop/taveband/taveband/src/routes/Scrap.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from \"../components/Header\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport \"./Scrap.css\";\r\n\r\nfunction Scrap() {\r\n  const { user_id } = useParams();\r\n  const [scraps, setScraps] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchScraps = async () => {\r\n      try {\r\n        const response = await axios.get(`/dailband/user/${user_id}/scraps`);\r\n        setScraps(response.data);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch scraps:\", error);\r\n      }\r\n    };\r\n\r\n    fetchScraps();\r\n  }, [user_id]);\r\n\r\n  const handleDelete = (postId) => {\r\n    axios.delete(`/dailband/user/${user_id}/scraps/${postId}`)\r\n      .then(() => {\r\n        setScraps(scraps.filter(scrap => scrap.post_id !== postId));\r\n      })\r\n      .catch(error => {\r\n        console.error('There was an error deleting the scrap!', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ScrapsPage\">\r\n      <Header />\r\n      <div className=\"Sidebar\">\r\n        <h2>윤영선</h2>\r\n        <Link to={`/profile/edit/${user_id}`}>프로필 수정</Link>\r\n        <Link to={`/dailband/user/${user_id}/scrap`}>스크랩</Link>\r\n        <Link to={`/dailband/user/${user_id}/posts`}>내가 쓴 글</Link>\r\n        <Link to={`/dailband/user/myreservations`}>공연 예약</Link>\r\n      </div>\r\n      <div className=\"Content\">\r\n        <h2>스크랩</h2>\r\n        <div className=\"ScrapsList\">\r\n          {scraps.map((scrap) => (\r\n            <div key={scrap.post_id} className=\"ScrapItem\">\r\n              <h3>{scrap.title}</h3>\r\n              <p>{scrap.content}</p>\r\n              <p><strong>작성자:</strong> {scrap.nickname}</p>\r\n              <p>작성 날짜: {new Date(scrap.created_at).toLocaleDateString()}</p>\r\n              <button onClick={() => handleDelete(scrap.post_id)}>삭제</button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scrap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}